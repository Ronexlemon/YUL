/*
0x6080604052348015600e575f80fd5b5060b780601a5f395ff3fe6080604052348015600e575f80fd5b5060043610603a575f3560e01c8063730ef26914603e578063a9d68806146053578063ad730a27146064575b5f80fd5b5f545b60405190815260200160405180910390f35b6062605e366004606b565b5f55565b005b60415f5481565b5f60208284031215607a575f80fd5b503591905056fea26469706673582212208ee4b879aeae7b6c972ab968eecccc3c8fc179d28c521cfdbce6457c07ee389764736f6c63430008190033
*/

//# sections
//1. contract creation
//2.Runtime
//3.Metadata




//free memory pointer
*PUSH1 0x80   // [0x80]
PUSH1 0x40   //[0x40,0x80]
MSTORE      // memory 0x40 <= 0x80
CALLVALUE    //[Checking msg.value]
DUP1        //[msg.value,msg.value]

ISZERO   // [msg.value ==0,msg.value]

PUSH1 0x0e   // [0x0e,msg.value ==0,msg.value]]

JUMPI   //[msg.value]

PUSH0   //[0x00,msg.value]

DUP1  //[0x00,0x00,msg.value]
REVERT  //[msg.value]
//jumdest if msg.value =0
JUMPDEST      
POP
PUSH1 0xb7
DUP1
PUSH1 0x1a
PUSH0
CODECOPY
PUSH0
RETURN
INVALID
PUSH1 0x80
PUSH1 0x40
MSTORE
CALLVALUE
DUP1
ISZERO
PUSH1 0x0e
JUMPI
PUSH0
DUP1
REVERT
JUMPDEST
POP
PUSH1 0x04
CALLDATASIZE
LT
PUSH1 0x3a
JUMPI
PUSH0
CALLDATALOAD
PUSH1 0xe0
SHR
DUP1
PUSH4 0x730ef269
EQ
PUSH1 0x3e
JUMPI
DUP1
PUSH4 0xa9d68806
EQ
PUSH1 0x53
JUMPI
DUP1
PUSH4 0xad730a27
EQ
PUSH1 0x64
JUMPI
JUMPDEST
PUSH0
DUP1
REVERT
JUMPDEST
PUSH0
SLOAD
JUMPDEST
PUSH1 0x40
MLOAD
SWAP1
DUP2
MSTORE
PUSH1 0x20
ADD
PUSH1 0x40
MLOAD
DUP1
SWAP2
SUB
SWAP1
RETURN
JUMPDEST
PUSH1 0x62
PUSH1 0x5e
CALLDATASIZE
PUSH1 0x04
PUSH1 0x6b
JUMP
JUMPDEST
PUSH0
SSTORE
JUMP
JUMPDEST
STOP
JUMPDEST
PUSH1 0x41
PUSH0
SLOAD
DUP2
JUMP
JUMPDEST
PUSH0
PUSH1 0x20
DUP3
DUP5
SUB
SLT
ISZERO
PUSH1 0x7a
JUMPI
PUSH0
DUP1
REVERT
JUMPDEST
POP
CALLDATALOAD
SWAP2
SWAP1
POP
JUMP
INVALID
LOG2
PUSH5 0x6970667358
INVALID
SLT
KECCAK256
DUP15
INVALID
INVALID
PUSH26 0xaeae7b6c972ab968eecccc3c8fc179d28c521cfdbce6457c07ee
CODESIZE
SWAP8
PUSH5 0x736f6c6343
STOP
ADDMOD
NOT
STOP
CALLER
