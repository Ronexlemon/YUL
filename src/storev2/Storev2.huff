
#define function mintHorse()nonpayable returns()
#define function feedHorse(uint256) nonpayable returns(bool)
#define function isHappyHorse(uint256) nonpayable returns(bool)
#define function horseIdToFedTimeStamp(uint256) nonpayable returns()
#define function HORSE_HAPPY_IF_FED_WITHIN() nonpayable returns(uint256)

//Storage slots
#define constant  NUMBER_OF_HORSER = FREE_STORAGE_POINTER()

#define  macro MAIN()= takes(0) returns(0){
    //function Selector
    //Push0 into stack
    0x00            //[0x00]
    //load calldataload
    calldataload     //[calldataload,0x00]
    //push number of bytes to shift by => which is 32 bytes = 64 - 4 bytes x2 = 8 bits for function selector => 224 b  => 0xe0 in hex
    0xe0
    //Shift to the right to get the function selector
    shr    //[function_selector]
    dup1    // [function_selector,function_selector]
    __FUNC_SIG(mintHorse) // [mintHorse_function_selector,function_selector,function_selector]
    eq
    mint   // [mintHorseProgramCounter,true/false,function selector]
    jumpi   // [function_selector]

    dup1    //[function_selector,function_selector]
    __FUNC_SIG(feedHorse) // [feedHorse_function_selector,function_selector,function_selector]
    eq       
    feed   // [feedHorseProgramCounter,true/false,function selector]
    jumpi   // [function_selector]

    dup1     // [function_selector]

    __FUNC_SIG(isHappyHorse) // [isHappyHorse_Function_selector,function_selector]
    eq
    isHappyHorse   // [isHappyHorseProgramCounter,function_elector]
    jumpi   // [function_selector]
    //if not happy horse then jump to horseIdToFedTimeStamp
    dup1
    __FUNC_SIG(horseIdToFedTimeStamp) // [horseIdToFedTimeStamp_function_selector
    eq
    horseIdToFedTimeStamp   // [horseIdToFedTimeStampProgramCounter,function_selector]
    jumpi   // [function_selector]
    //if not horseIdToFedTimeStamp then jump to HORSE_HAPPY_IF_FED
    
    __FUNC_SIG(HORSE_HAPPY_IF_FED_WITHIN) // [HORSE_HAPPY_Function_Selector,function_selector]
    eq
    HORSE_HAPPY_IF_FED_WITHIN   // [HORSE_HAPPY_ProgramCounter,true/false]
    jumpi   // []





    //if none of the above functions are called then jump to the default function
    0x00 0x00 revert



    mint:
        MINT_HORSE()
    feed:
      FEED_HORSE()
    isHappyHorse:
       IS_HAPPY_HORSE()
    horseIdToFedTimeStamp:
         HORSE_ID_TO_FED_TIMESTAMP()
    HORSE_HAPPY_IF_FED_WITHIN:
         HORSE_HAPPY_IF_FED_WITHIN()

     

}
#define macro MINT_HORSE()= takes(0) returns(0){

}
#define macro FEED_HORSE() = takes(0) returns(0){
    timestamp    // [timestamp]
    0x04
    calldataload   //[horseId,timestamp]
    //sstore the horse id


}

#define macro IS_HAPPY_HORSE() = takes(0) returns(0){

}
#define macro HORSE_ID_TO_FED_TIMESTAMP() = takes(0) returns(0){
    }

#define macro HORSE_HAPPY_IF_FED_WITHIN() = takes(0) returns(0){}