//send calldata -> function dispatch "geting the function selector" -> "route" function
//60008060093d393df3 ->contract creation bytecode
// ??  ->runtime code

/**Interfaces*/
#define function  updateNumberOfItems(uint256) nonpayable returns()
#define function getNumberOfItems() view returns(uint256)


#define constant NUMBER_OF_ITEMS_STORAGE_SLOT = FREE_STORAGE_POINTER(); //0
#define macro MAIN()= takes(0) returns(0){
//     //let find the function selector
//     //PUSH0  //or 0x00 -> same as push 0 into the stack
//    0x00    //[0]
//   // 0x02    //TOP [2,0] BOTTOM
//   calldataload   //[calldata] ->it includes even the function selector "function slector is the first four bytes of a function"
//   //?? How to cut down the calldata => function selector
// 0xe0  //[0xe0,calldata(32)]
// shr    // [function_selector]

0x00 calldataload 0xe0  shr

//[function_Selector]
//jump data associated with the selector
//0xa9d68806 => updateNumberOfItems(uint256) => update
//0x730ef269 => getNumberOfItems() => get
dup1                  //Duplicating [function_selector,function_selector]
__FUNC_SIG(updateNumberOfItems)      //[0xa9d68806,,function_selector,function_selector]
eq              //[true_if_func_slector_matches,function_Selector]

//jump to updateNumberOfItems(uint256) if true
updateNumberOfItems       //[updateNumberOfItemsProgramCounter,true/false,function_selector]
jumpi      // [function_selector]

//getNumberOfItems()
__FUNC_SIG(getNumberOfItems)      //[0x730ef269,function_selector]
eq               //[true_if_func_selector_matches]
getNumberOfItems       //[getNumberOfItemsProgramCounter,true/false]
jumpi                //[]

0x00 0x00 revert  //[]
//if true jump to getNumberOfItems()
getNumberOfItems:
       GET_NUMBER_OF_ITEMS()








updateNumberOfItems:
      SET_NUMBER_OF_ITEMS()




}

#define macro SET_NUMBER_OF_ITEMS()= takes(0) returns(0){
     //get the value to store from calldata
     0x04   //[4] => bytes
     calldataload // [input value]
    //give a storage store
    [NUMBER_OF_ITEMS_STORAGE_SLOT]   //[storage_slot,value] // [NUMBER_OF_ITEMS_STORAGE_SLOT] index in storage =>0
   
    //2. store opcode
    sstore 
    stop

}

#define macro GET_NUMBER_OF_ITEMS()=takes(0) returns(0){
    
}